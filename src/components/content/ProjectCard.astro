---
import Card from '../ui/Card.astro';
import Badge from '../ui/Badge.astro';
import type { Project } from '../../types/content';

export interface Props {
  project: Project;
  variant?: 'full' | 'compact' | 'minimal';
  class?: string;
}

const { project, variant = 'compact', class: className = '' } = Astro.props;

const isCurrent = project.data.status === 'current';
const statusLabel = isCurrent ? 'Current' : project.data.duration;
---

<Card class={className}>
  {variant === 'full' && (
    <div class="card-header">
      <div>
        <h3 class="body-large mb-1">
          <a href={`/projects/${project.slug}`} class="text-accent">{project.data.title}</a>
        </h3>
        <p class="body text-secondary">{project.data.company} • {project.data.role}</p>
      </div>
      <Badge>{statusLabel}</Badge>
    </div>
  )}
  
  {(variant === 'compact' || variant === 'minimal') && (
    <div class="mb-3">
      <h3 class="body-large mb-1">
        <a href={`/projects/${project.slug}`} class="text-accent">{project.data.title}</a>
      </h3>
      <p class="body text-secondary">{project.data.company} • {statusLabel}</p>
    </div>
  )}
  
  <p class="body text-secondary card-content">{project.data.description}</p>
  
  {variant === 'full' && project.data.technologies && project.data.technologies.length > 0 && (
    <div class="badge-group mb-4">
      {project.data.technologies.slice(0, 4).map((tech) => (
        <Badge>{tech}</Badge>
      ))}
    </div>
  )}
  
  {variant === 'full' && (
    <div class="card-footer">
      <a href={`/projects/${project.slug}`} class="body text-accent">View Details →</a>
      {project.data.externalUrl && (
        <a href={project.data.externalUrl} class="body text-secondary" target="_blank" rel="noopener noreferrer">
          Live Project ↗
        </a>
      )}
    </div>
  )}
  
  {variant === 'compact' && (
    <div class="card-footer">
      <Badge>{project.data.role}</Badge>
      <a href={`/projects/${project.slug}`} class="body text-accent">Details →</a>
    </div>
  )}
  
  {variant === 'minimal' && (
    <Badge>{project.data.role}</Badge>
  )}
</Card>
