---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Card from '../../components/ui/Card.astro';
import Badge from '../../components/ui/Badge.astro';

// Получаем все опубликованные посты
const allPosts = await getCollection('blog');
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const featuredPosts = publishedPosts.filter(post => post.data.featured);
const regularPosts = publishedPosts.filter(post => !post.data.featured);
---

<Layout 
  title="Blog - neprokin.com"
  description="Articles about design systems, product design, and building better user experiences"
>
  <main class="container">
    <!-- Header -->
    <header class="page-header">
      <h1 class="h1 text-accent mb-4">Blog</h1>
      <p class="body-large text-secondary mb-8">
        Thoughts on design systems, product design, and building better user experiences
      </p>
    </header>

    <!-- Featured Posts -->
    {featuredPosts.length > 0 && (
      <section class="section">
        <h2 class="h2 mb-8">Featured Articles</h2>
        <div class="grid grid-1">
          {featuredPosts.map((post) => {
            const publishDate = new Intl.DateTimeFormat('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            }).format(post.data.publishDate);
            
            return (
              <Card>
                <div class="card-header">
                  <Badge>Featured</Badge>
                  <span class="body text-secondary">{publishDate}</span>
                </div>
                <h3 class="body-large mb-3">
                  <a href={`/blog/${post.slug}`} class="text-accent">{post.data.title}</a>
                </h3>
                <p class="body text-secondary card-content">{post.data.description}</p>
                {post.data.tags && (
                  <div class="badge-group mb-4">
                    {post.data.tags.slice(0, 3).map((tag) => (
                      <Badge>{tag}</Badge>
                    ))}
                  </div>
                )}
                <div class="card-footer">
                  <a href={`/blog/${post.slug}`} class="body text-accent">Read Article →</a>
                  {post.data.readingTime && (
                    <span class="body text-secondary">{post.data.readingTime} min read</span>
                  )}
                </div>
              </Card>
            );
          })}
        </div>
      </section>
    )}

    <!-- Regular Posts -->
    {regularPosts.length > 0 && (
      <section class="section">
        <h2 class="h2 mb-8">All Articles</h2>
        <div class="grid grid-1">
          {regularPosts.map((post) => {
            const publishDate = new Intl.DateTimeFormat('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric'
            }).format(post.data.publishDate);
            
            return (
              <Card>
                <div class="flex justify-between items-start mb-3">
                  <h3 class="body-large">
                    <a href={`/blog/${post.slug}`} class="text-accent">{post.data.title}</a>
                  </h3>
                  <span class="body text-secondary">{publishDate}</span>
                </div>
                <p class="body text-secondary card-content">{post.data.description}</p>
                {post.data.tags && (
                  <div class="badge-group">
                    {post.data.tags.slice(0, 4).map((tag) => (
                      <Badge>{tag}</Badge>
                    ))}
                  </div>
                )}
              </Card>
            );
          })}
        </div>
      </section>
    )}

    <!-- Empty State -->
    {publishedPosts.length === 0 && (
      <section class="section text-center">
        <h2 class="h2 text-secondary mb-4">No posts yet</h2>
        <p class="body text-secondary">Articles will appear here when published.</p>
      </section>
    )}

    <!-- Navigation -->
    <nav class="content-nav">
      <a href="/" class="body text-accent">← Back to Home</a>
    </nav>
  </main>
</Layout>
